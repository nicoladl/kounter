{"version":3,"sources":["actions/index.js","components/AddMealForm.js","components/MealList.js","components/Happy.js","components/Sad.js","components/ShowTotals.js","components/Profile.js","firebase.js","components/Dashboard.js","utils.js","components/PersonPicker.js","router/Router.js","reducers/food.js","reducers/profile.js","reducers/index.js","index.js"],"names":["addProfile","profile","type","addFood","food","AddMealForm","props","dispatch","useDispatch","mealFromInput","React","createRef","kcalFromInput","onSubmit","e","preventDefault","meal","name","current","value","kcal","parseInt","currentTarget","reset","ref","MealList","useSelector","state","className","map","index","key","Happy","role","aria-label","Sad","ShowTotals","total","deltaKcal","Profile","userProfile","to","pathname","Object","keys","filter","visibleOnProfile","data-key","basalMetabolism","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Dashboard","localStorageRef","localStorage","getItem","match","params","JSON","parse","post","data","checkLocalStorage","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","basalMetabolismCalculation","weight","height","age","gender","NamePicker","nameFromInput","weightFromInput","genderFromInput","ageFromInput","heightFromInput","getProfileFromLocalStorage","inputChar","slug","setItem","stringify","history","push","required","defaultValue","location","onChange","min","Router","path","exact","component","PersonPicker","action","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e42eea0.chunk.js","sourcesContent":["// Action\nexport const addProfile = (profile) => {\n  return {\n    type: 'ADD_PROFILE',\n    profile\n  }\n}\n\nexport const addFood = (food) => {\n  return {\n    type: 'ADD_FOOD',\n    food\n  }\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\n// import base from \"../firebase\";\nimport { addFood } from '../actions'\n\nexport default function AddMealForm(props) {\n  const dispatch = useDispatch()\n  // const profile = useSelector(state => state.profile.userProfile)\n  // const food = useSelector(state => state.food)\n  const mealFromInput = React.createRef();\n  const kcalFromInput = React.createRef();\n\n  const addToList = e => {\n    // stop preventing form\n    e.preventDefault();\n    // add to state\n    const meal = {\n      name: mealFromInput.current.value,\n      kcal: parseInt(kcalFromInput.current.value)\n    };\n\n    // dispatch to Redux\n    dispatch(addFood(meal))\n\n    // post to database\n    // base.post(`${profile.name.value}/food`, {\n    //   data: food\n    // });\n\n    // post to database\n    // base.post(`${props.match.params.name}/total`, {\n    //   data: total\n    // });\n\n    // refresh the form\n    e.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={addToList}>\n      nome <input name=\"meal\" type=\"text\" ref={mealFromInput} />\n      <br />\n      kcal <input name=\"kcal\" type=\"number\" ref={kcalFromInput} />\n      <br />\n      <button type=\"submit\">add</button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from 'react-redux'\n\nexport default function MealList(props) {\n  const meal = useSelector(state => state.food.food)\n  return (\n    <ul className=\"meal-list\">\n      {meal.map((value, index) => {\n        return (\n          <li key={index}>\n            {value.name} <span className=\"meal-kcal\">{value.kcal}</span> Kcal\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import React from \"react\";\n\nconst Happy = () => {\n  return (\n    <span role=\"img\" aria-label=\"happy\">\n      &#128522;\n    </span>\n  );\n};\n\nexport default Happy;\n","import React from \"react\";\n\nconst Sad = () => {\n  return (\n    <span role=\"img\" aria-label=\"Sad\">\n      &#128533;\n    </span>\n  );\n};\n\nexport default Sad;\n","import React from \"react\";\nimport Happy from \"./Happy\";\nimport Sad from \"./Sad\";\n\nexport default function ShowTotals(props) {\n  return (\n    <div className=\"total\">\n      <div className=\"total__partial\">Total in: <span className=\"total-kcal\">{props.total}</span> Kcal</div>\n      <div className=\"total__main\">\n        Total amount of calories:{\" \"}\n        <strong>\n          <span className=\"total-sum\">{props.deltaKcal}</span> Kcal {props.deltaKcal > 0 ? <Sad /> : <Happy />}\n        </strong>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\nimport AddMealForm from \"./AddMealForm\";\nimport MealList from \"./MealList\";\nimport ShowTotals from \"./ShowTotals\";\n\nexport default function Profile(props) {\n  // get profile from Store\n  const profile = useSelector(state => state.profile.userProfile)\n  const total = useSelector(state => state.food.total)\n\n  // if component is not ready show loading\n  if (!profile.name) {\n    return <p>loading...</p>;\n  }\n\n  return (\n    <>\n      <h1>Hi {profile.name.value}</h1>\n      <Link to={{ pathname: \"/\", profile: profile }}>edit profile</Link>\n\n      <ul className=\"profile\">\n        {Object.keys(profile)\n          // filter if visibleOnProfile is true\n          .filter(key => profile[key].visibleOnProfile)\n          // iterate through all the items\n          .map(key => {\n            return (\n              // show on profile and add correct unit misure\n              <li\n                key={key}\n                className={key}\n                data-key={profile[key].value}>\n                {key}: {profile[key].value}\n                {key === \"weight\" ? \" kg\" : null}\n                {key === \"height\" ? \" cm\" : null}\n                {key === \"basalMetabolism\" ? \" Kcal\" : null}\n              </li>\n            );\n          })}\n      </ul>\n\n      <AddMealForm />\n      {total > 0 && <MealList />}\n\n      {total > 0 && (\n        <ShowTotals\n          total={total}\n          deltaKcal={total - profile.basalMetabolism.value}\n        />\n      )}\n    </>\n  );\n}\n","import Rebase from \"re-base\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBA8Gwx7omYnoSCZujw-35mQPy0PANM51M\",\n    authDomain: \"kounter-92315.firebaseapp.com\",\n    databaseURL: \"https://kounter-92315.firebaseio.com\",\n    projectId: \"kounter-92315\",\n    storageBucket: \"kounter-92315.appspot.com\",\n    messagingSenderId: \"604239372694\",\n    appId: \"1:604239372694:web:2c995aaefdacd98d3abdb7\"\n};\n\n// Initialize Firebase\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\n//Use Rebase\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\nexport default base;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux'\nimport Profile from \"./Profile\";\nimport base from \"../firebase\";\nimport { addProfile } from '../actions'\n\nexport default function Dashboard(props) {\n  const dispatch = useDispatch()\n  const state = {\n    food: []\n  };\n\n  const checkLocalStorage = () => {\n    // if localStorage has item with selected name setState with data\n    const localStorageRef = localStorage.getItem(props.match.params.name);\n    if (localStorageRef) {\n      const localStorage = JSON.parse(localStorageRef);\n\n      // dispatch to Redux\n      dispatch(addProfile(localStorage))\n    }\n\n    // post to database\n    base.post(`${props.match.params.name}/profile`, {\n      data: JSON.parse(localStorageRef)\n    });\n  }\n\n  const checkStatus = () => {\n    const localStorageRef = localStorage.getItem(props.match.params.name);\n    let showProfile = true;\n    // if localStorage exist show Profile else show BackToPicker\n    localStorageRef ? (showProfile = true) : (showProfile = false);\n    return showProfile;\n  }\n\n  checkLocalStorage()\n  if (!checkStatus()) {\n    return (\n      <>\n        <p>data not found</p>\n        <Link to=\"/\">back to data</Link>\n      </>\n    )\n  }\n  return <Profile state={state} />\n}\n","export const slugify = string => {\n  const a =\n    \"àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;\";\n  const b =\n    \"aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return (\n    string\n      .toString()\n      .toLowerCase()\n      .replace(/\\s+/g, \"-\") // Replace spaces with -\n      .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n      .replace(/&/g, \"-and-\") // Replace & with 'and'\n      // eslint-disable-next-line\n      .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word characters\n      // eslint-disable-next-line\n      .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n      .replace(/^-+/, \"\") // Trim - from start of text\n      .replace(/-+$/, \"\")\n  ); // Trim - from end of text\n};\n\nexport const basalMetabolismCalculation = ({ weight, height, age, gender }) => {\n  let basalMetabolism = 0;\n  switch (gender.value) {\n    case \"male\": {\n      basalMetabolism =\n        66 + 13.7 * weight.value + 5 * height.value - 6.8 * age.value;\n      break;\n    }\n\n    case \"female\": {\n      basalMetabolism =\n        665 + 9.6 * weight.value + 1.9 * height.value - 4.7 * age.value;\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  return parseInt(basalMetabolism);\n};\n","import React from \"react\";\nimport { useDispatch } from 'react-redux'\nimport { addProfile } from '../actions'\nimport { slugify, basalMetabolismCalculation } from \"../utils\";\n\nexport default function NamePicker(props) {\n  const nameFromInput = React.createRef();\n  const weightFromInput = React.createRef();\n  const genderFromInput = React.createRef();\n  const ageFromInput = React.createRef();\n  const heightFromInput = React.createRef();\n  const dispatch = useDispatch()\n\n  const getProfileFromLocalStorage = () => {\n    let inputChar = \"\";\n\n    // detect if input is filled\n    if (nameFromInput.current) {\n      inputChar = slugify(nameFromInput.current.value);\n\n      // get profile from localStorage\n      const profile = JSON.parse(localStorage.getItem(inputChar));\n\n      // update form value\n      if (profile) {\n        nameFromInput.current.value = profile.name.value;\n        weightFromInput.current.value = profile.weight.value;\n        genderFromInput.current.value = profile.gender.value;\n        ageFromInput.current.value = profile.age.value;\n        heightFromInput.current.value = profile.height.value;\n      }\n    }\n  };\n\n  const calculateBasalMetabolism = e => {\n    e.preventDefault(); // block event\n\n    // get input value and store into object\n    const profile = {\n      name: {\n        value: nameFromInput.current.value,\n        visibleOnProfile: false\n      },\n      slug: {\n        value: slugify(nameFromInput.current.value),\n        visibleOnProfile: false\n      },\n      weight: {\n        value: weightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      gender: {\n        value: genderFromInput.current.value,\n        visibleOnProfile: true\n      },\n      age: {\n        value: ageFromInput.current.value,\n        visibleOnProfile: true\n      },\n      height: {\n        value: heightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      basalMetabolism: {\n        value: 0,\n        visibleOnProfile: true\n      }\n    };\n\n    // calculate basal metabolism and update profile obj\n    profile.basalMetabolism.value = basalMetabolismCalculation(profile); // calculation\n\n    // save or update to LocalStorage\n    localStorage.setItem(profile.slug.value, JSON.stringify(profile));\n\n    // go to new route with params profile obj\n    props.history.push({\n      pathname: `/counter/${profile.slug.value}`,\n      profile\n    });\n\n    // dispatch to Redux\n    dispatch(addProfile(profile))\n  };\n\n  getProfileFromLocalStorage();\n  return (\n    <form onSubmit={calculateBasalMetabolism}>\n      <label>\n        Name:\n          <input\n          type=\"text\"\n          name=\"name\"\n          required\n          ref={nameFromInput}\n          defaultValue={\n            props.location.profile\n              ? props.location.profile.name.value\n              : \"\"\n          }\n          onChange={getProfileFromLocalStorage}\n        />\n      </label>\n      <br />\n      <label>\n        Gender:\n          <select\n          name=\"gender\"\n          required\n          ref={genderFromInput}\n          defaultValue={\n            props.location.profile\n              ? props.location.profile.gender.value\n              : \"\"\n          }\n        >\n          <option value=\"male\">male</option>\n          <option value=\"female\">female</option>\n        </select>\n      </label>\n      <br />\n      <label>\n        Age:\n          <input\n          type=\"number\"\n          min=\"0\"\n          name=\"age\"\n          required\n          ref={ageFromInput}\n          defaultValue={\n            props.location.profile\n              ? props.location.profile.age.value\n              : \"\"\n          }\n        />\n      </label>\n      <br />\n      <label>\n        Weight (Kg):\n          <input\n          type=\"number\"\n          min=\"0\"\n          name=\"weight\"\n          required\n          ref={weightFromInput}\n          defaultValue={\n            props.location.profile\n              ? props.location.profile.weight.value\n              : \"\"\n          }\n        />\n      </label>\n      <br />\n      <label>\n        Height (cm):\n          <input\n          type=\"number\"\n          min=\"0\"\n          name=\"height\"\n          required\n          ref={heightFromInput}\n          defaultValue={\n            props.location.profile\n              ? props.location.profile.height.value\n              : \"\"\n          }\n        />\n      </label>\n      <br />\n\n      <button type=\"submit\">Calculate</button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../components/Dashboard\";\nimport PersonPicker from \"../components/PersonPicker\";\n\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={PersonPicker}></Route>\n      <Route path=\"/counter/:name\" component={Dashboard}></Route>\n    </Switch>\n  </HashRouter>\n);\n\nexport default Router;\n","// FOOD Reducer\nconst food = (state = { food: [], total: 0 }, action) => {\n  switch (action.type) {\n    case 'ADD_FOOD':\n      return {\n        food: [...state.food, action.food],\n        total: state.total + action.food.kcal\n      }\n    default:\n      return state\n  }\n}\n\nexport default food\n","// PROFILE Reducer\nconst profile = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_PROFILE':\n      return {\n        ...state,\n        userProfile: action.profile\n      }\n    default:\n      return state\n  }\n}\n\nexport default profile\n","import food from './food'\nimport profile from './profile'\nimport { combineReducers } from 'redux'\n\n// Reducer\nconst rootReducer = combineReducers({ food, profile })\n\nexport default rootReducer\n","import 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./router/Router\";\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\n\nlet store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n// store.subscribe(() => console.log(store.getState()))\n\n// Dispatch\n// store.dispatch(addFood({ food: 'fish' }))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}