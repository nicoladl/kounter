{"version":3,"sources":["components/AddMealForm.js","components/MealList.js","components/Profile.js","components/App.js","utils.js","components/PersonPicker.js","router/Router.js","index.js"],"names":["AddMealForm","mealFromInput","React","createRef","kcalFromInput","addToList","e","preventDefault","meal","name","current","value","kcal","parseInt","props","currentTarget","reset","onSubmit","this","type","ref","Component","MealList","map","index","key","Profile","profile","to","pathname","state","food","total","App","push","reduce","sum","item","setState","localStorageRef","localStorage","getItem","match","params","JSON","parse","checkStatus","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","basalMetabolismCalculation","weight","height","age","basalMetabolism","gender","NamePicker","nameFromInput","weightFromInput","genderFromInput","ageFromInput","heightFromInput","calculateBasalMetabolism","visibleOnProfile","slug","setItem","stringify","history","defaultValue","location","Router","path","exact","component","PersonPicker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d09fed90.chunk.js","sourcesContent":["import React from \"react\";\n\nclass AddMealForm extends React.Component {\n  mealFromInput = React.createRef();\n  kcalFromInput = React.createRef();\n\n  addToList = e => {\n    // stop preventing form\n    e.preventDefault();\n    // add to state\n    const meal = {\n      name: this.mealFromInput.current.value,\n      kcal: parseInt(this.kcalFromInput.current.value)\n    };\n    this.props.addToList(meal);\n    // refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.addToList}>\n        nome <input name=\"meal\" type=\"text\" ref={this.mealFromInput} />\n        <br />\n        kcal <input name=\"kcal\" type=\"number\" ref={this.kcalFromInput} />\n        <br />\n        <button>add</button>\n      </form>\n    );\n  }\n}\n\nexport default AddMealForm;\n","import React from \"react\";\n\nclass MealList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.meal.map((value, index) => {\n          return (\n            <li key={index}>\n              {value.name} {value.kcal}Kcal\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default MealList;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddMealForm from \"./AddMealForm\";\nimport MealList from \"./MealList\";\n\nclass Profile extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <h1>Hi {this.props.profile.name.value}</h1>\n        <Link to={{ pathname: \"/\", name: this.props.profile.name.value }}>\n          edit profile\n        </Link>\n        {/* <ul>\n          {Object.keys(this.props.profile).map(\n            key => console.log(this.props.profile)\n            // if (this.props.profile[key].visibleOnProfile) {\n            //   <li key={key}>\n            //     {key}: {this.props.profile[key]}\n            //   </li>;\n            // }\n          )}\n        </ul> */}\n\n        <AddMealForm addToList={this.props.addToList} />\n        <MealList meal={this.props.state.food} />\n        {this.props.total ? (\n          <p>\n            Total: <strong>{this.props.total}kcal</strong>\n          </p>\n        ) : null}\n      </Fragment>\n    );\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Profile from \"./Profile\";\n\nclass App extends React.Component {\n  state = {\n    profile: {},\n    food: []\n  };\n\n  componentDidMount() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.name);\n    this.setState({ profile: JSON.parse(localStorageRef) });\n  }\n\n  checkStatus() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.name);\n    let showProfile = true;\n    // if localStora exist show Profile else show BackToPicker\n    localStorageRef ? (showProfile = true) : (showProfile = false);\n    return showProfile;\n  }\n\n  addToList = meal => {\n    // copy state\n    const food = [...this.state.food];\n    // add item to list\n    food.push(meal);\n    // calc total kcal\n    this.total = food.reduce((sum, item) => {\n      return sum + item.kcal;\n    }, 0);\n    // update state\n    this.setState({ food });\n  };\n\n  render() {\n    if (this.checkStatus()) {\n      return (\n        <Profile\n          profile={this.state.profile}\n          state={this.state}\n          addToList={this.addToList}\n          total={this.total}\n        />\n      );\n    }\n    return <Link to=\"/\">back to data</Link>;\n  }\n}\n\nexport default App;\n","export const slugify = string => {\n  const a =\n    \"àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;\";\n  const b =\n    \"aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return (\n    string\n      .toString()\n      .toLowerCase()\n      .replace(/\\s+/g, \"-\") // Replace spaces with -\n      .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n      .replace(/&/g, \"-and-\") // Replace & with 'and'\n      // eslint-disable-next-line\n      .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word characters\n      // eslint-disable-next-line\n      .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n      .replace(/^-+/, \"\") // Trim - from start of text\n      .replace(/-+$/, \"\")\n  ); // Trim - from end of text\n};\n\nexport const basalMetabolismCalculation = ({ weight, height, age, gender }) => {\n  let basalMetabolism = 0;\n  switch (gender.value) {\n    case \"male\": {\n      basalMetabolism =\n        66 + 13.7 * weight.value + 5 * height.value - 6.8 * age.value;\n      break;\n    }\n\n    case \"female\": {\n      basalMetabolism =\n        665 + 9.6 * weight.value + 1.9 * height.value - 4.7 * age.value;\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  return parseInt(basalMetabolism);\n};\n","import React from \"react\";\nimport { slugify, basalMetabolismCalculation } from \"../utils\";\n\nclass NamePicker extends React.Component {\n  nameFromInput = React.createRef();\n  weightFromInput = React.createRef();\n  genderFromInput = React.createRef();\n  ageFromInput = React.createRef();\n  heightFromInput = React.createRef();\n\n  calculateBasalMetabolism = e => {\n    // block event\n    e.preventDefault();\n    // get input value and store into object\n    const profile = {\n      name: {\n        value: this.nameFromInput.current.value,\n        visibleOnProfile: false\n      },\n      slug: {\n        value: slugify(this.nameFromInput.current.value),\n        visibleOnProfile: false\n      },\n      weight: {\n        value: this.weightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      gender: {\n        value: this.genderFromInput.current.value,\n        visibleOnProfile: true\n      },\n      age: {\n        value: this.ageFromInput.current.value,\n        visibleOnProfile: true\n      },\n      height: {\n        value: this.heightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      basalMetabolism: {\n        value: \"\",\n        visibleOnProfile: false\n      }\n    };\n\n    // calculate basal metabolism and update profile obj\n    profile.basalMetabolism.value = basalMetabolismCalculation(profile); // calculation\n\n    // save or update to LocalStorage\n    localStorage.setItem(profile.slug.value, JSON.stringify(profile));\n\n    // go to new route with params profile obj\n    this.props.history.push({\n      pathname: `/counter/${profile.slug.value}`,\n      profile\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.calculateBasalMetabolism}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            ref={this.nameFromInput}\n            defaultValue={this.props.location.name}\n          />\n        </label>\n        <label>\n          Weight:\n          <input type=\"text\" name=\"weight\" ref={this.weightFromInput} />\n        </label>\n        <label>\n          Name:\n          <select ref={this.genderFromInput}>\n            <option value=\"male\">male</option>\n            <option value=\"female\">female</option>\n          </select>\n        </label>\n        <label>\n          age:\n          <input type=\"text\" name=\"age\" ref={this.ageFromInput} />\n        </label>\n\n        <label>\n          height:\n          <input type=\"number\" name=\"height\" ref={this.heightFromInput} />\n        </label>\n\n        <button type=\"submit\">Calculate</button>\n      </form>\n    );\n  }\n}\n\nexport default NamePicker;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport App from \"../components/App\";\nimport PersonPicker from \"../components/PersonPicker\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact component={PersonPicker}></Route>\n      <Route path=\"/counter/:name\" component={App}></Route>\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./router/Router\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}