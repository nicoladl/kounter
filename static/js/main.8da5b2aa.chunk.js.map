{"version":3,"sources":["components/AddMealForm.js","components/MealList.js","components/Happy.js","components/Sad.js","components/ShowTotals.js","components/Profile.js","components/App.js","utils.js","components/PersonPicker.js","router/Router.js","index.js"],"names":["AddMealForm","mealFromInput","React","createRef","kcalFromInput","addToList","e","preventDefault","meal","name","current","value","kcal","parseInt","food","props","state","push","total","reduce","sum","item","currentTarget","reset","onSubmit","this","type","ref","Component","MealList","map","index","key","Happy","role","aria-label","Sad","ShowTotals","deltaKcal","Profile","profile","to","pathname","Object","keys","visibleOnProfile","basalMetabolism","App","setState","localStorageRef","localStorage","getItem","match","params","JSON","parse","checkStatus","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","basalMetabolismCalculation","weight","height","age","gender","NamePicker","nameFromInput","weightFromInput","genderFromInput","ageFromInput","heightFromInput","getProfileFromLocalStorage","inputChar","calculateBasalMetabolism","slug","setItem","stringify","history","defaultValue","location","onChange","min","Router","path","exact","component","PersonPicker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8da5b2aa.chunk.js","sourcesContent":["import React from \"react\";\n\nclass AddMealForm extends React.Component {\n  mealFromInput = React.createRef();\n  kcalFromInput = React.createRef();\n\n  addToList = e => {\n    // stop preventing form\n    e.preventDefault();\n    // add to state\n    const meal = {\n      name: this.mealFromInput.current.value,\n      kcal: parseInt(this.kcalFromInput.current.value)\n    };\n\n    // copy state\n    const food = [...this.props.state.food];\n    // add item to list\n    food.push(meal);\n    // calc total kcal\n    const total = food.reduce((sum, item) => {\n      return sum + item.kcal;\n    }, 0);\n    // update state\n    this.props.addToList(food, total);\n    // refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.addToList}>\n        nome <input name=\"meal\" type=\"text\" ref={this.mealFromInput} />\n        <br />\n        kcal <input name=\"kcal\" type=\"number\" ref={this.kcalFromInput} />\n        <br />\n        <button>add</button>\n      </form>\n    );\n  }\n}\n\nexport default AddMealForm;\n","import React from \"react\";\n\nclass MealList extends React.Component {\n  render() {\n    return (\n      <ul>\n        {this.props.meal.map((value, index) => {\n          return (\n            <li key={index}>\n              {value.name} {value.kcal}Kcal\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default MealList;\n","import React from \"react\";\n\nconst Happy = () => {\n  return (\n    <span role=\"img\" aria-label=\"happy\">\n      &#128522;\n    </span>\n  );\n};\n\nexport default Happy;\n","import React from \"react\";\n\nconst Sad = () => {\n  return (\n    <span role=\"img\" aria-label=\"Sad\">\n      &#128533;\n    </span>\n  );\n};\n\nexport default Sad;\n","import React, { Fragment } from \"react\";\nimport Happy from \"./Happy\";\nimport Sad from \"./Sad\";\n\nclass ShowTotals extends React.Component {\n  render() {\n    return (\n      <Fragment>\n        <p>Total in: {this.props.total}kcal</p>\n        <p>\n          Total amount of calories:{\" \"}\n          <strong>\n            {this.props.deltaKcal}\n            Kcal {this.props.deltaKcal > 0 ? <Sad /> : <Happy />}\n          </strong>\n        </p>\n      </Fragment>\n    );\n  }\n}\n\nexport default ShowTotals;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddMealForm from \"./AddMealForm\";\nimport MealList from \"./MealList\";\nimport ShowTotals from \"./ShowTotals\";\n\nclass Profile extends React.Component {\n  render() {\n    // set some vars\n    const props = this.props;\n    const profile = props.profile;\n\n    // if component is not ready show loading\n    if (profile.name) {\n      return (\n        <Fragment>\n          <h1>Hi {profile.name.value}</h1>\n          <Link to={{ pathname: \"/\", profile: profile }}>edit profile</Link>\n\n          <ul>\n            {Object.keys(profile).map(key => {\n              // filter if visibleOnProfile is true\n              if (profile[key].visibleOnProfile) {\n                return (\n                  // show on profile\n                  <li key={key}>\n                    {key}: {profile[key].value} {key === \"weight\" ? \"kg\" : null}\n                    {key === \"height\" ? \"cm\" : null}\n                  </li>\n                );\n              }\n            })}\n          </ul>\n\n          <AddMealForm addToList={props.addToList} state={props.state} />\n          <MealList meal={props.state.food} />\n\n          {props.state.total ? (\n            <ShowTotals\n              total={props.state.total}\n              deltaKcal={props.state.total - profile.basalMetabolism.value}\n            />\n          ) : null}\n        </Fragment>\n      );\n    }\n    return <p>loading...</p>;\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Profile from \"./Profile\";\n\nclass App extends React.Component {\n  state = {\n    profile: {},\n    food: []\n  };\n\n  componentDidMount() {\n    // if localStorage has item with selected name setState with data\n    const localStorageRef = localStorage.getItem(this.props.match.params.name);\n    this.setState({ profile: JSON.parse(localStorageRef) });\n  }\n\n  checkStatus() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.name);\n    let showProfile = true;\n    // if localStorage exist show Profile else show BackToPicker\n    localStorageRef ? (showProfile = true) : (showProfile = false);\n    return showProfile;\n  }\n\n  addToList = (food, total) => {\n    // update state\n    this.setState({ food, total });\n  };\n\n  render() {\n    if (this.checkStatus()) {\n      return (\n        <Profile\n          profile={this.state.profile}\n          state={this.state}\n          addToList={this.addToList}\n          total={this.total}\n        />\n      );\n    }\n    return <Link to=\"/\">back to data</Link>;\n  }\n}\n\nexport default App;\n","export const slugify = string => {\n  const a =\n    \"àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;\";\n  const b =\n    \"aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return (\n    string\n      .toString()\n      .toLowerCase()\n      .replace(/\\s+/g, \"-\") // Replace spaces with -\n      .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n      .replace(/&/g, \"-and-\") // Replace & with 'and'\n      // eslint-disable-next-line\n      .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word characters\n      // eslint-disable-next-line\n      .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n      .replace(/^-+/, \"\") // Trim - from start of text\n      .replace(/-+$/, \"\")\n  ); // Trim - from end of text\n};\n\nexport const basalMetabolismCalculation = ({ weight, height, age, gender }) => {\n  let basalMetabolism = 0;\n  switch (gender.value) {\n    case \"male\": {\n      basalMetabolism =\n        66 + 13.7 * weight.value + 5 * height.value - 6.8 * age.value;\n      break;\n    }\n\n    case \"female\": {\n      basalMetabolism =\n        665 + 9.6 * weight.value + 1.9 * height.value - 4.7 * age.value;\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  return parseInt(basalMetabolism);\n};\n","import React from \"react\";\nimport { slugify, basalMetabolismCalculation } from \"../utils\";\n// import Tooltip from \"./Tooltip\";\n\nclass NamePicker extends React.Component {\n  nameFromInput = React.createRef();\n  weightFromInput = React.createRef();\n  genderFromInput = React.createRef();\n  ageFromInput = React.createRef();\n  heightFromInput = React.createRef();\n\n  getProfileFromLocalStorage = () => {\n    let inputChar = \"\";\n\n    // detect if input is filled\n    if (this.nameFromInput.current) {\n      inputChar = slugify(this.nameFromInput.current.value);\n\n      // get profile from localStorage\n      const profile = JSON.parse(localStorage.getItem(inputChar));\n\n      // update form value\n      this.nameFromInput.current.value = profile.name.value;\n      this.weightFromInput.current.value = profile.weight.value;\n      this.genderFromInput.current.value = profile.gender.value;\n      this.ageFromInput.current.value = profile.age.value;\n      this.heightFromInput.current.value = profile.height.value;\n    }\n  };\n\n  calculateBasalMetabolism = e => {\n    e.preventDefault(); // block event\n\n    // get input value and store into object\n    const profile = {\n      name: {\n        value: this.nameFromInput.current.value,\n        visibleOnProfile: false\n      },\n      slug: {\n        value: slugify(this.nameFromInput.current.value),\n        visibleOnProfile: false\n      },\n      weight: {\n        value: this.weightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      gender: {\n        value: this.genderFromInput.current.value,\n        visibleOnProfile: true\n      },\n      age: {\n        value: this.ageFromInput.current.value,\n        visibleOnProfile: true\n      },\n      height: {\n        value: this.heightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      basalMetabolism: {\n        value: 0,\n        visibleOnProfile: true\n      }\n    };\n\n    // calculate basal metabolism and update profile obj\n    profile.basalMetabolism.value = basalMetabolismCalculation(profile); // calculation\n\n    // save or update to LocalStorage\n    localStorage.setItem(profile.slug.value, JSON.stringify(profile));\n\n    // go to new route with params profile obj\n    this.props.history.push({\n      pathname: `/counter/${profile.slug.value}`,\n      profile\n    });\n  };\n\n  render() {\n    this.getProfileFromLocalStorage();\n    return (\n      <form onSubmit={this.calculateBasalMetabolism}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            ref={this.nameFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.name.value\n                : \"\"\n            }\n            onChange={this.getProfileFromLocalStorage}\n          />\n        </label>\n        <br />\n        <label>\n          Gender:\n          <select\n            ref={this.genderFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.gender.value\n                : \"\"\n            }\n          >\n            <option value=\"male\">male</option>\n            <option value=\"female\">female</option>\n          </select>\n        </label>\n        <br />\n        <label>\n          age:\n          <input\n            type=\"number\"\n            min=\"0\"\n            name=\"age\"\n            ref={this.ageFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.age.value\n                : \"\"\n            }\n          />\n        </label>\n        <br />\n        <label>\n          Weight (Kg):\n          <input\n            type=\"number\"\n            min=\"0\"\n            name=\"weight\"\n            ref={this.weightFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.weight.value\n                : \"\"\n            }\n          />\n        </label>\n        <br />\n        <label>\n          height (cm):\n          <input\n            type=\"number\"\n            min=\"0\"\n            name=\"height\"\n            ref={this.heightFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.height.value\n                : \"\"\n            }\n          />\n        </label>\n        <br />\n\n        <button type=\"submit\">Calculate</button>\n      </form>\n    );\n  }\n}\n\nexport default NamePicker;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport App from \"../components/App\";\nimport PersonPicker from \"../components/PersonPicker\";\n\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={PersonPicker}></Route>\n      <Route path=\"/counter/:name\" component={App}></Route>\n    </Switch>\n  </HashRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./router/Router\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}