{"version":3,"sources":["firebase.js","components/AddMealForm.js","components/MealList.js","components/Happy.js","components/Sad.js","components/ShowTotals.js","components/Profile.js","components/App.js","utils.js","components/PersonPicker.js","router/Router.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","AddMealForm","mealFromInput","React","createRef","kcalFromInput","addToList","e","preventDefault","current","value","isNaN","meal","name","kcal","parseInt","food","props","state","push","total","reduce","sum","item","currentTarget","reset","onSubmit","this","type","ref","Component","MealList","map","index","key","Happy","role","aria-label","Sad","ShowTotals","deltaKcal","Profile","profile","to","pathname","Object","keys","visibleOnProfile","basalMetabolism","App","setState","post","match","params","data","localStorageRef","localStorage","getItem","JSON","parse","checkStatus","slugify","string","a","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","basalMetabolismCalculation","weight","height","age","gender","NamePicker","nameFromInput","weightFromInput","genderFromInput","ageFromInput","heightFromInput","getProfileFromLocalStorage","inputChar","calculateBasalMetabolism","slug","setItem","stringify","history","defaultValue","location","onChange","min","Router","path","exact","component","PersonPicker","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27d97a1e.chunk.js","sourcesContent":["import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBA8Gwx7omYnoSCZujw-35mQPy0PANM51M\",\n  authDomain: \"kounter-92315.firebaseapp.com\",\n  databaseURL: \"https://kounter-92315.firebaseio.com\"\n};\n\n// Initialize Firebase\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\n//Use Rebase\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\nexport default base;\n","import React from \"react\";\n\nclass AddMealForm extends React.Component {\n  mealFromInput = React.createRef();\n  kcalFromInput = React.createRef();\n\n  addToList = e => {\n    // stop preventing form\n    e.preventDefault();\n\n    // detect form error\n    // TODO add validator\n    if (this.mealFromInput.current.value === '' || this.kcalFromInput.current.value.isNaN) {\n      return 0\n    }\n\n    // add to state\n    const meal = {\n      name: this.mealFromInput.current.value,\n      kcal: parseInt(this.kcalFromInput.current.value)\n    };\n\n    // copy state\n    const food = [...this.props.state.food];\n    // add item to list\n    food.push(meal);\n    // calc total kcal\n    const total = food.reduce((sum, item) => {\n      return sum + item.kcal;\n    }, 0);\n    // update state\n    this.props.addToList(food, total);\n    // refresh the form\n    e.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.addToList}>\n        nome <input name=\"meal\" type=\"text\" ref={this.mealFromInput} />\n        <br />\n        kcal <input name=\"kcal\" type=\"number\" ref={this.kcalFromInput} />\n        <br />\n        <button>add</button>\n      </form>\n    );\n  }\n}\n\nexport default AddMealForm;\n","import React from \"react\";\n\nconst MealList = props => {\n  return (\n    <ul>\n      {props.meal.map((value, index) => {\n        return (\n          <li key={index}>\n            {value.name} {value.kcal}Kcal\n            </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nexport default MealList;\n","import React from \"react\";\n\nconst Happy = () => {\n  return (\n    <span role=\"img\" aria-label=\"happy\">\n      &#128522;\n    </span>\n  );\n};\n\nexport default Happy;\n","import React from \"react\";\n\nconst Sad = () => {\n  return (\n    <span role=\"img\" aria-label=\"Sad\">\n      &#128533;\n    </span>\n  );\n};\n\nexport default Sad;\n","import React, { Fragment } from \"react\";\nimport Happy from \"./Happy\";\nimport Sad from \"./Sad\";\n\nconst ShowTotals = props => {\n  return (\n    <Fragment>\n      <p>Total in: {props.total}kcal</p>\n      <p>\n        Total amount of calories:{\" \"}\n        <strong>\n          {props.deltaKcal}\n          Kcal {props.deltaKcal > 0 ? <Sad /> : <Happy />}\n        </strong>\n      </p>\n    </Fragment >\n  );\n}\n\nexport default ShowTotals;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AddMealForm from \"./AddMealForm\";\nimport MealList from \"./MealList\";\nimport ShowTotals from \"./ShowTotals\";\n\nclass Profile extends React.Component {\n  render() {\n    // set some vars\n    const props = this.props;\n    const profile = props.profile;\n\n    // if component is not ready show loading\n    if (profile.name) {\n      return (\n        <Fragment>\n          <h1>Hi {profile.name.value}</h1>\n          <Link to={{ pathname: \"/\", profile: profile }}>edit profile</Link>\n\n          <ul>\n            {Object.keys(profile).map(key => {\n              // filter if visibleOnProfile is true\n              if (profile[key].visibleOnProfile) {\n                return (\n                  // show on profile\n                  <li key={key}>\n                    {key}: {profile[key].value} {key === \"weight\" ? \"kg\" : null}\n                    {key === \"height\" ? \"cm\" : null}\n                  </li>\n                );\n              }\n            })}\n          </ul>\n\n          <AddMealForm addToList={props.addToList} state={props.state} />\n          <MealList meal={props.state.food} />\n\n          {props.state.total ? (\n            <ShowTotals\n              total={props.state.total}\n              deltaKcal={props.state.total - profile.basalMetabolism.value}\n            />\n          ) : null}\n        </Fragment>\n      );\n    }\n    return <p>loading...</p>;\n  }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport base from \"../firebase\";\nimport Profile from \"./Profile\";\n\nclass App extends React.Component {\n  state = {\n    profile: {},\n    food: []\n  };\n\n  componentDidMount() {\n    // if localStorage has item with selected name setState with data\n    const localStorageRef = localStorage.getItem(this.props.match.params.name);\n    if (localStorageRef) {\n      const localStorage = JSON.parse(localStorageRef);\n      this.setState({ profile: localStorage });\n    }\n\n    // post to database\n    base.post(`${this.props.match.params.name}/profile`, {\n      data: JSON.parse(localStorageRef)\n    });\n  }\n\n  checkStatus() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.name);\n    let showProfile = true;\n    // if localStorage exist show Profile else show BackToPicker\n    localStorageRef ? (showProfile = true) : (showProfile = false);\n    return showProfile;\n  }\n\n  addToList = (food, total) => {\n    // update state\n    this.setState({ food, total });\n\n    // post to database\n    base.post(`${this.props.match.params.name}/food`, {\n      data: food\n    });\n\n    // post to database\n    base.post(`${this.props.match.params.name}/total`, {\n      data: total\n    });\n  };\n\n  render() {\n    if (this.checkStatus()) {\n      return (\n        <Profile\n          profile={this.state.profile}\n          state={this.state}\n          addToList={this.addToList}\n          total={this.total}\n        />\n      );\n    }\n    return <Link to=\"/\">back to data</Link>;\n  }\n}\n\nexport default App;\n","export const slugify = string => {\n  const a =\n    \"àáäâãåăæąçćčđďèéěėëêęğǵḧìíïîįłḿǹńňñòóöôœøṕŕřßşśšșťțùúüûǘůűūųẃẍÿýźžż·/_,:;\";\n  const b =\n    \"aaaaaaaaacccddeeeeeeegghiiiiilmnnnnooooooprrsssssttuuuuuuuuuwxyyzzz------\";\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\n\n  return (\n    string\n      .toString()\n      .toLowerCase()\n      .replace(/\\s+/g, \"-\") // Replace spaces with -\n      .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n      .replace(/&/g, \"-and-\") // Replace & with 'and'\n      // eslint-disable-next-line\n      .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word characters\n      // eslint-disable-next-line\n      .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\n      .replace(/^-+/, \"\") // Trim - from start of text\n      .replace(/-+$/, \"\")\n  ); // Trim - from end of text\n};\n\nexport const basalMetabolismCalculation = ({ weight, height, age, gender }) => {\n  let basalMetabolism = 0;\n  switch (gender.value) {\n    case \"male\": {\n      basalMetabolism =\n        66 + 13.7 * weight.value + 5 * height.value - 6.8 * age.value;\n      break;\n    }\n\n    case \"female\": {\n      basalMetabolism =\n        665 + 9.6 * weight.value + 1.9 * height.value - 4.7 * age.value;\n      break;\n    }\n\n    default:\n      break;\n  }\n\n  return parseInt(basalMetabolism);\n};\n","import React from \"react\";\nimport { slugify, basalMetabolismCalculation } from \"../utils\";\n// import Tooltip from \"./Tooltip\";\n\nclass NamePicker extends React.Component {\n  nameFromInput = React.createRef();\n  weightFromInput = React.createRef();\n  genderFromInput = React.createRef();\n  ageFromInput = React.createRef();\n  heightFromInput = React.createRef();\n\n  getProfileFromLocalStorage = () => {\n    let inputChar = \"\";\n\n    // detect if input is filled\n    if (this.nameFromInput.current) {\n      inputChar = slugify(this.nameFromInput.current.value);\n\n      // get profile from localStorage\n      const profile = JSON.parse(localStorage.getItem(inputChar));\n\n      // update form value\n      if (profile) {\n        this.nameFromInput.current.value = profile.name.value;\n        this.weightFromInput.current.value = profile.weight.value;\n        this.genderFromInput.current.value = profile.gender.value;\n        this.ageFromInput.current.value = profile.age.value;\n        this.heightFromInput.current.value = profile.height.value;\n      }\n    }\n  };\n\n  calculateBasalMetabolism = e => {\n    e.preventDefault(); // block event\n\n    // get input value and store into object\n    const profile = {\n      name: {\n        value: this.nameFromInput.current.value,\n        visibleOnProfile: false\n      },\n      slug: {\n        value: slugify(this.nameFromInput.current.value),\n        visibleOnProfile: false\n      },\n      weight: {\n        value: this.weightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      gender: {\n        value: this.genderFromInput.current.value,\n        visibleOnProfile: true\n      },\n      age: {\n        value: this.ageFromInput.current.value,\n        visibleOnProfile: true\n      },\n      height: {\n        value: this.heightFromInput.current.value,\n        visibleOnProfile: true\n      },\n      basalMetabolism: {\n        value: 0,\n        visibleOnProfile: true\n      }\n    };\n\n    // calculate basal metabolism and update profile obj\n    profile.basalMetabolism.value = basalMetabolismCalculation(profile); // calculation\n\n    // save or update to LocalStorage\n    localStorage.setItem(profile.slug.value, JSON.stringify(profile));\n\n    // go to new route with params profile obj\n    this.props.history.push({\n      pathname: `/counter/${profile.slug.value}`,\n      profile\n    });\n  };\n\n  render() {\n    this.getProfileFromLocalStorage();\n    return (\n      <form onSubmit={this.calculateBasalMetabolism}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            ref={this.nameFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.name.value\n                : \"\"\n            }\n            onChange={this.getProfileFromLocalStorage}\n          />\n        </label>\n        <br />\n        <label>\n          Gender:\n          <select\n            ref={this.genderFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.gender.value\n                : \"\"\n            }\n          >\n            <option value=\"male\">male</option>\n            <option value=\"female\">female</option>\n          </select>\n        </label>\n        <br />\n        <label>\n          age:\n          <input\n            type=\"number\"\n            min=\"0\"\n            name=\"age\"\n            ref={this.ageFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.age.value\n                : \"\"\n            }\n          />\n        </label>\n        <br />\n        <label>\n          Weight (Kg):\n          <input\n            type=\"number\"\n            min=\"0\"\n            name=\"weight\"\n            ref={this.weightFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.weight.value\n                : \"\"\n            }\n          />\n        </label>\n        <br />\n        <label>\n          height (cm):\n          <input\n            type=\"number\"\n            min=\"0\"\n            name=\"height\"\n            ref={this.heightFromInput}\n            defaultValue={\n              this.props.location.profile\n                ? this.props.location.profile.height.value\n                : \"\"\n            }\n          />\n        </label>\n        <br />\n\n        <button type=\"submit\">Calculate</button>\n      </form>\n    );\n  }\n}\n\nexport default NamePicker;\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport App from \"../components/App\";\nimport PersonPicker from \"../components/PersonPicker\";\n\nconst Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/\" exact component={PersonPicker}></Route>\n      <Route path=\"/counter/:name\" component={App}></Route>\n    </Switch>\n  </HashRouter>\n);\n\nexport default Router;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./router/Router\";\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}